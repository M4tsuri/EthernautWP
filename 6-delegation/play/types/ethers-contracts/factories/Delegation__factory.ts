/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Delegation, DelegationInterface } from "../Delegation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_delegateAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161035b38038061035b833981810160405281019061003291906100ce565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100c881610129565b92915050565b6000602082840312156100e057600080fd5b60006100ee848285016100b9565b91505092915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610132816100f7565b811461013d57600080fd5b50565b61020c8061014f6000396000f3fe608060405234801561001057600080fd5b506004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b146100e05761004d565b5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600036604051610099929190610156565b600060405180830381855af49150503d80600081146100d4576040519150601f19603f3d011682016040523d82523d6000602084013e6100d9565b606091505b5050905050005b6100e86100fe565b6040516100f5919061016f565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61012b81610195565b82525050565b600061013d838561018a565b935061014a8385846101c7565b82840190509392505050565b6000610163828486610131565b91508190509392505050565b60006020820190506101846000830184610122565b92915050565b600081905092915050565b60006101a0826101a7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b8281833760008383015250505056fea2646970667358221220b416cdb931676197986fc55e204ff3c437944445be759307520bf41d0477af1064736f6c63430008000033";

type DelegationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DelegationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Delegation__factory extends ContractFactory {
  constructor(...args: DelegationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Delegation";
  }

  deploy(
    _delegateAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Delegation> {
    return super.deploy(
      _delegateAddress,
      overrides || {}
    ) as Promise<Delegation>;
  }
  getDeployTransaction(
    _delegateAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_delegateAddress, overrides || {});
  }
  attach(address: string): Delegation {
    return super.attach(address) as Delegation;
  }
  connect(signer: Signer): Delegation__factory {
    return super.connect(signer) as Delegation__factory;
  }
  static readonly contractName: "Delegation";
  public readonly contractName: "Delegation";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelegationInterface {
    return new utils.Interface(_abi) as DelegationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Delegation {
    return new Contract(address, _abi, signerOrProvider) as Delegation;
  }
}
