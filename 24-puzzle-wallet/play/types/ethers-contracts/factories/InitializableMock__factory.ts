/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  InitializableMock,
  InitializableMockInterface,
} from "../InitializableMock";

const _abi = [
  {
    inputs: [],
    name: "initializerRan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "x",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeNested",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
    ],
    name: "initializeWithX",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
    ],
    name: "nonInitializable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fail",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105ab806100206000396000f3fe60806040526004361061006f5760003560e01c8063a9cc47181161004e578063a9cc4718146100e4578063c3b8ef2a146100fb578063cb3a528d1461012a578063e955c9ec146101415761006f565b806218eaa8146100745780630c55699c146100a25780638129fc1c146100cd575b600080fd5b6100a06004803603602081101561008a57600080fd5b810190808035906020019092919050505061016f565b005b3480156100ae57600080fd5b506100b7610276565b6040518082815260200191505060405180910390f35b3480156100d957600080fd5b506100e261027c565b005b3480156100f057600080fd5b506100f9610396565b005b34801561010757600080fd5b5061011061040c565b604051808215151515815260200191505060405180910390f35b34801561013657600080fd5b5061013f61041f565b005b61016d6004803603602081101561015757600080fd5b8101908080359060200190929190505050610526565b005b600060019054906101000a900460ff168061018e575061018d610530565b5b806101a557506000809054906101000a900460ff16155b6101fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610548602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561024a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8160018190555080156102725760008060016101000a81548160ff0219169083151502179055505b5050565b60015481565b600060019054906101000a900460ff168061029b575061029a610530565b5b806102b257506000809054906101000a900460ff16155b610307576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610548602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610357576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6001600060026101000a81548160ff02191690831515021790555080156103935760008060016101000a81548160ff0219169083151502179055505b50565b600061040a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f496e697469616c697a61626c654d6f636b20666f72636564206661696c75726581525060200191505060405180910390fd5b565b600060029054906101000a900460ff1681565b600060019054906101000a900460ff168061043e575061043d610530565b5b8061045557506000809054906101000a900460ff16155b6104aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610548602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156104fa576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61050261027c565b80156105235760008060016101000a81548160ff0219169083151502179055505b50565b8060018190555050565b6000803090506000813b905060008114925050509056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220ce78af56ba6fbabe80a63841a9c95fcf51069a33150784f4988ce09990a5e72a64736f6c63430006020033";

type InitializableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitializableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitializableMock__factory extends ContractFactory {
  constructor(...args: InitializableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "InitializableMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InitializableMock> {
    return super.deploy(overrides || {}) as Promise<InitializableMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): InitializableMock {
    return super.attach(address) as InitializableMock;
  }
  connect(signer: Signer): InitializableMock__factory {
    return super.connect(signer) as InitializableMock__factory;
  }
  static readonly contractName: "InitializableMock";
  public readonly contractName: "InitializableMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitializableMockInterface {
    return new utils.Interface(_abi) as InitializableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitializableMock {
    return new Contract(address, _abi, signerOrProvider) as InitializableMock;
  }
}
