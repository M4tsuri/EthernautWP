/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MigratableMockV2,
  MigratableMockV2Interface,
} from "../MigratableMockV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "x",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "y",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "anotherValue",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102d5806100206000396000f3fe60806040526004361061003f5760003560e01c80630c55699c146100445780633e54bacb1461006f578063a56dfe4a146100a7578063fe4b84df146100d2575b600080fd5b34801561005057600080fd5b50610059610100565b6040518082815260200191505060405180910390f35b6100a56004803603604081101561008557600080fd5b810190808035906020019092919080359060200190929190505050610106565b005b3480156100b357600080fd5b506100bc61014d565b6040518082815260200191505060405180910390f35b6100fe600480360360208110156100e857600080fd5b8101908080359060200190929190505050610153565b005b60015481565b600260009054906101000a900460ff161561012057600080fd5b81600181905550806003819055506001600260006101000a81548160ff0219169083151502179055505050565b60035481565b600060019054906101000a900460ff1680610172575061017161025a565b5b8061018957506000809054906101000a900460ff16155b6101de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610272602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561022e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8160018190555080156102565760008060016101000a81548160ff0219169083151502179055505b5050565b6000803090506000813b905060008114925050509056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220ff02af7b11a0ead2c5ca57da2c4a76c847e14587bdf221b4ed88597840569fb364736f6c63430006020033";

type MigratableMockV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MigratableMockV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MigratableMockV2__factory extends ContractFactory {
  constructor(...args: MigratableMockV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MigratableMockV2";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MigratableMockV2> {
    return super.deploy(overrides || {}) as Promise<MigratableMockV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MigratableMockV2 {
    return super.attach(address) as MigratableMockV2;
  }
  connect(signer: Signer): MigratableMockV2__factory {
    return super.connect(signer) as MigratableMockV2__factory;
  }
  static readonly contractName: "MigratableMockV2";
  public readonly contractName: "MigratableMockV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MigratableMockV2Interface {
    return new utils.Interface(_abi) as MigratableMockV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MigratableMockV2 {
    return new Contract(address, _abi, signerOrProvider) as MigratableMockV2;
  }
}
