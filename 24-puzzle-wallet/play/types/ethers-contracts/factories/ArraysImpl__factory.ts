/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ArraysImpl, ArraysImplInterface } from "../ArraysImpl";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "element",
        type: "uint256",
      },
    ],
    name: "findUpperBound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103243803806103248339818101604052602081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b8382019150602082018581111561006957600080fd5b825186602082028301116401000000008211171561008657600080fd5b8083526020830192505050908051906020019060200280838360005b838110156100bd5780820151818401526020810190506100a2565b5050505090500160405250505080600090805190602001906100e09291906100e7565b5050610159565b828054828255906000526020600020908101928215610123579160200282015b82811115610122578251825591602001919060010190610107565b5b5090506101309190610134565b5090565b61015691905b8082111561015257600081600090555060010161013a565b5090565b90565b6101bc806101686000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806333e3a58a14610030575b600080fd5b61005c6004803603602081101561004657600080fd5b8101908080359060200190929190505050610072565b6040518082815260200191505060405180910390f35b600061008882600061008f90919063ffffffff16565b9050919050565b600080838054905014156100a6576000905061013e565b60008090506000848054905090505b808210156100fe5760006100c98383610144565b9050848682815481106100d857fe5b906000526020600020015411156100f1578091506100f8565b6001810192505b506100b5565b60008211801561012657508385600184038154811061011957fe5b9060005260206000200154145b1561013857600182039250505061013e565b81925050505b92915050565b6000600280838161015157fe5b066002858161015c57fe5b06018161016557fe5b046002838161017057fe5b046002858161017b57fe5b04010190509291505056fea2646970667358221220af80849246a6349115c381085f78c9aeeb231e0e25f1c9b7501b5cb8b48cd1ab64736f6c63430006020033";

type ArraysImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArraysImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArraysImpl__factory extends ContractFactory {
  constructor(...args: ArraysImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ArraysImpl";
  }

  deploy(
    array: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArraysImpl> {
    return super.deploy(array, overrides || {}) as Promise<ArraysImpl>;
  }
  getDeployTransaction(
    array: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(array, overrides || {});
  }
  attach(address: string): ArraysImpl {
    return super.attach(address) as ArraysImpl;
  }
  connect(signer: Signer): ArraysImpl__factory {
    return super.connect(signer) as ArraysImpl__factory;
  }
  static readonly contractName: "ArraysImpl";
  public readonly contractName: "ArraysImpl";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArraysImplInterface {
    return new utils.Interface(_abi) as ArraysImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArraysImpl {
    return new Contract(address, _abi, signerOrProvider) as ArraysImpl;
  }
}
