/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SwappableToken,
  SwappableTokenInterface,
} from "../SwappableToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019d9380380620019d983398181016040528101906200003791906200035f565b828281600390805190602001906200005192919062000226565b5080600490805190602001906200006a92919062000226565b50505062000088338262000091640100000000026401000000009004565b5050506200066b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000104576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000fb906200043a565b60405180910390fd5b62000121600083836200021c640100000000026401000000009004565b8060026000828254620001359190620004f1565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200018c9190620004f1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001f391906200045c565b60405180910390a3620002186000838362000221640100000000026401000000009004565b5050565b505050565b505050565b82805462000234906200058e565b90600052602060002090601f016020900481019282620002585760008555620002a4565b82601f106200027357805160ff1916838001178555620002a4565b82800160010185558215620002a4579182015b82811115620002a357825182559160200191906001019062000286565b5b509050620002b39190620002b7565b5090565b5b80821115620002d2576000816000905550600101620002b8565b5090565b6000620002ed620002e784620004ad565b62000479565b9050828152602081018484840111156200030657600080fd5b6200031384828562000558565b509392505050565b600082601f8301126200032d57600080fd5b81516200033f848260208601620002d6565b91505092915050565b600081519050620003598162000651565b92915050565b6000806000606084860312156200037557600080fd5b600084015167ffffffffffffffff8111156200039057600080fd5b6200039e868287016200031b565b935050602084015167ffffffffffffffff811115620003bc57600080fd5b620003ca868287016200031b565b9250506040620003dd8682870162000348565b9150509250925092565b6000620003f6601f83620004e0565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b62000434816200054e565b82525050565b600060208201905081810360008301526200045581620003e7565b9050919050565b600060208201905062000473600083018462000429565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620004a357620004a262000622565b5b8060405250919050565b600067ffffffffffffffff821115620004cb57620004ca62000622565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b6000620004fe826200054e565b91506200050b836200054e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620005435762000542620005c4565b5b828201905092915050565b6000819050919050565b60005b83811015620005785780820151818401526020810190506200055b565b8381111562000588576000848401525b50505050565b60006002820490506001821680620005a757607f821691505b60208210811415620005be57620005bd620005f3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200065c816200054e565b81146200066857600080fd5b50565b61135e806200067b6000396000f3fe608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e578063395093511461018557806370a08231146101b557806395d89b41146101e5578063a457c2d714610203578063a9059cbb14610233578063dd62ed3e14610263576100c6565b806306fdde03146100cb578063095ea7b3146100e957806318160ddd1461011957806323b872dd14610137578063313ce56714610167575b600080fd5b6100d3610293565b6040516100e09190611027565b60405180910390f35b61010360048036038101906100fe9190610ca0565b610325565b604051610110919061100c565b60405180910390f35b610121610343565b60405161012e9190611129565b60405180910390f35b610151600480360381019061014c9190610c51565b61034d565b60405161015e919061100c565b60405180910390f35b61016f610445565b60405161017c9190611144565b60405180910390f35b61019f600480360381019061019a9190610ca0565b61044e565b6040516101ac919061100c565b60405180910390f35b6101cf60048036038101906101ca9190610bec565b6104fa565b6040516101dc9190611129565b60405180910390f35b6101ed610542565b6040516101fa9190611027565b60405180910390f35b61021d60048036038101906102189190610ca0565b6105d4565b60405161022a919061100c565b60405180910390f35b61024d60048036038101906102489190610ca0565b6106bf565b60405161025a919061100c565b60405180910390f35b61027d60048036038101906102789190610c15565b6106dd565b60405161028a9190611129565b60405180910390f35b6060600380546102a290611259565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90611259565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b5050505050905090565b6000610339610332610764565b848461076c565b6001905092915050565b6000600254905090565b600061035a848484610937565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103a5610764565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c906110a9565b60405180910390fd5b61043985610431610764565b85840361076c565b60019150509392505050565b60006012905090565b60006104f061045b610764565b848460016000610469610764565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104eb919061117b565b61076c565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461055190611259565b80601f016020809104026020016040519081016040528092919081815260200182805461057d90611259565b80156105ca5780601f1061059f576101008083540402835291602001916105ca565b820191906000526020600020905b8154815290600101906020018083116105ad57829003601f168201915b5050505050905090565b600080600160006105e3610764565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069790611109565b60405180910390fd5b6106b46106ab610764565b8585840361076c565b600191505092915050565b60006106d36106cc610764565b8484610937565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d3906110e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084390611069565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161092a9190611129565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099e906110c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0e90611049565b60405180910390fd5b610a22838383610bb8565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9f90611089565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b3b919061117b565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b9f9190611129565b60405180910390a3610bb2848484610bbd565b50505050565b505050565b505050565b600081359050610bd1816112fa565b92915050565b600081359050610be681611311565b92915050565b600060208284031215610bfe57600080fd5b6000610c0c84828501610bc2565b91505092915050565b60008060408385031215610c2857600080fd5b6000610c3685828601610bc2565b9250506020610c4785828601610bc2565b9150509250929050565b600080600060608486031215610c6657600080fd5b6000610c7486828701610bc2565b9350506020610c8586828701610bc2565b9250506040610c9686828701610bd7565b9150509250925092565b60008060408385031215610cb357600080fd5b6000610cc185828601610bc2565b9250506020610cd285828601610bd7565b9150509250929050565b610ce5816111e3565b82525050565b6000610cf68261115f565b610d00818561116a565b9350610d10818560208601611226565b610d19816112e9565b840191505092915050565b6000610d3160238361116a565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d9760228361116a565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610dfd60268361116a565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e6360288361116a565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ec960258361116a565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f2f60248361116a565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f9560258361116a565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610ff78161120f565b82525050565b61100681611219565b82525050565b60006020820190506110216000830184610cdc565b92915050565b600060208201905081810360008301526110418184610ceb565b905092915050565b6000602082019050818103600083015261106281610d24565b9050919050565b6000602082019050818103600083015261108281610d8a565b9050919050565b600060208201905081810360008301526110a281610df0565b9050919050565b600060208201905081810360008301526110c281610e56565b9050919050565b600060208201905081810360008301526110e281610ebc565b9050919050565b6000602082019050818103600083015261110281610f22565b9050919050565b6000602082019050818103600083015261112281610f88565b9050919050565b600060208201905061113e6000830184610fee565b92915050565b60006020820190506111596000830184610ffd565b92915050565b600081519050919050565b600082825260208201905092915050565b60006111868261120f565b91506111918361120f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111c6576111c561128b565b5b828201905092915050565b60006111dc826111ef565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611244578082015181840152602081019050611229565b83811115611253576000848401525b50505050565b6000600282049050600182168061127157607f821691505b60208210811415611285576112846112ba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611303816111d1565b811461130e57600080fd5b50565b61131a8161120f565b811461132557600080fd5b5056fea264697066735822122013df98201577a3570f9825ee14c42ef7501f54ff5144ede0fc92d7bb239110a064736f6c63430008000033";

type SwappableTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwappableTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwappableToken__factory extends ContractFactory {
  constructor(...args: SwappableTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SwappableToken";
  }

  deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwappableToken> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<SwappableToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  attach(address: string): SwappableToken {
    return super.attach(address) as SwappableToken;
  }
  connect(signer: Signer): SwappableToken__factory {
    return super.connect(signer) as SwappableToken__factory;
  }
  static readonly contractName: "SwappableToken";
  public readonly contractName: "SwappableToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwappableTokenInterface {
    return new utils.Interface(_abi) as SwappableTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwappableToken {
    return new Contract(address, _abi, signerOrProvider) as SwappableToken;
  }
}
