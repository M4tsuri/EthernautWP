/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SampleFather, SampleFatherInterface } from "../SampleFather";

const _abi = [
  {
    inputs: [],
    name: "father",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gramps",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_gramps",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_father",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107d5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631c8aca3b146100675780634a6c9db6146100855780638129fc1c146100a75780638beaf7d7146100b1578063f62d188814610176578063fa39851f14610231575b600080fd5b61006f6102b4565b6040518082815260200191505060405180910390f35b61008d6102ba565b604051808215151515815260200191505060405180910390f35b6100af6102cd565b005b610174600480360360408110156100c757600080fd5b81019080803590602001906401000000008111156100e457600080fd5b8201836020820111156100f657600080fd5b8035906020019184600183028401116401000000008311171561011857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506103e7565b005b61022f6004803603602081101561018c57600080fd5b81019080803590602001906401000000008111156101a957600080fd5b8201836020820111156101bb57600080fd5b803590602001918460018302840111640100000000831117156101dd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104f8565b005b610239610617565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027957808201518184015260208101905061025e565b50505050905090810190601f1680156102a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60025481565b600060029054906101000a900460ff1681565b600060019054906101000a900460ff16806102ec57506102eb6106b5565b5b8061030357506000809054906101000a900460ff16155b610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610772602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156103a8576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6001600060026101000a81548160ff02191690831515021790555080156103e45760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061040657506104056106b5565b5b8061041d57506000809054906101000a900460ff16155b610472576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610772602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156104c2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6104cb836104f8565b8160028190555080156104f35760008060016101000a81548160ff0219169083151502179055505b505050565b600060019054906101000a900460ff168061051757506105166106b5565b5b8061052e57506000809054906101000a900460ff16155b610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610772602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156105d3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6105db6102cd565b81600190805190602001906105f19291906106cc565b5080156106135760008060016101000a81548160ff0219169083151502179055505b5050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106ad5780601f10610682576101008083540402835291602001916106ad565b820191906000526020600020905b81548152906001019060200180831161069057829003601f168201915b505050505081565b6000803090506000813b9050600081149250505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061070d57805160ff191683800117855561073b565b8280016001018555821561073b579182015b8281111561073a57825182559160200191906001019061071f565b5b509050610748919061074c565b5090565b61076e91905b8082111561076a576000816000905550600101610752565b5090565b9056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220feafbda2f9878c46db6c956ad895347d76b7abb2ecce4ff3f12581f89b6ed66a64736f6c63430006020033";

type SampleFatherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleFatherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleFather__factory extends ContractFactory {
  constructor(...args: SampleFatherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SampleFather";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SampleFather> {
    return super.deploy(overrides || {}) as Promise<SampleFather>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SampleFather {
    return super.attach(address) as SampleFather;
  }
  connect(signer: Signer): SampleFather__factory {
    return super.connect(signer) as SampleFather__factory;
  }
  static readonly contractName: "SampleFather";
  public readonly contractName: "SampleFather";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleFatherInterface {
    return new utils.Interface(_abi) as SampleFatherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SampleFather {
    return new Contract(address, _abi, signerOrProvider) as SampleFather;
  }
}
