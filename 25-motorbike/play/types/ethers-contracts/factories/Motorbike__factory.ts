/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Motorbike, MotorbikeInterface } from "../Motorbike";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610559380380610559833981810160405281019061003291906102ac565b6100458161022c60201b6100891760201c565b610084576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007b9061035c565b60405180910390fd5b806100b77f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023f60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f8129fc1c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101a191906103f6565b600060405180830381855af49150503d80600081146101dc576040519150601f19603f3d011682016040523d82523d6000602084013e6101e1565b606091505b5050905080610225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021c90610459565b60405180910390fd5b5050610479565b600080823b905060008111915050919050565b6000819050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102798261024e565b9050919050565b6102898161026e565b811461029457600080fd5b50565b6000815190506102a681610280565b92915050565b6000602082840312156102c2576102c1610249565b5b60006102d084828501610297565b91505092915050565b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000610346602d836102d9565b9150610351826102ea565b604082019050919050565b6000602082019050818103600083015261037581610339565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156103b0578082015181840152602081019050610395565b838111156103bf576000848401525b50505050565b60006103d08261037c565b6103da8185610387565b93506103ea818560208601610392565b80840191505092915050565b600061040282846103c5565b915081905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610443600b836102d9565b915061044e8261040d565b602082019050919050565b6000602082019050818103600083015261047281610436565b9050919050565b60d2806104876000396000f3fe6080604052605860307f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b605a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166064565b005b6000819050919050565b3660008037600080366000845af43d6000803e80600081146084573d6000f35b3d6000fd5b600080823b90506000811191505091905056fea264697066735822122087feb0ceb3e19b7f0cb9c53ad10176fa2d2f63f882da60fba32c168f68f0f98664736f6c634300080b0033";

type MotorbikeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MotorbikeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Motorbike__factory extends ContractFactory {
  constructor(...args: MotorbikeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Motorbike";
  }

  deploy(
    _logic: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Motorbike> {
    return super.deploy(_logic, overrides || {}) as Promise<Motorbike>;
  }
  getDeployTransaction(
    _logic: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_logic, overrides || {});
  }
  attach(address: string): Motorbike {
    return super.attach(address) as Motorbike;
  }
  connect(signer: Signer): Motorbike__factory {
    return super.connect(signer) as Motorbike__factory;
  }
  static readonly contractName: "Motorbike";
  public readonly contractName: "Motorbike";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MotorbikeInterface {
    return new utils.Interface(_abi) as MotorbikeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Motorbike {
    return new Contract(address, _abi, signerOrProvider) as Motorbike;
  }
}
