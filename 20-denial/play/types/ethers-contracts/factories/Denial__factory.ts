/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Denial, DenialInterface } from "../Denial";

const _abi = [
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "partner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_partner",
        type: "address",
      },
    ],
    name: "setWithdrawPartner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061064d806100206000396000f3fe60806040526004361061006b576000357c0100000000000000000000000000000000000000000000000000000000900480633ccfd60b146100775780634e1c59141461008e5780638b7afe2e146100b75780638da5cb5b146100e2578063be10862b1461010d57610072565b3661007257005b600080fd5b34801561008357600080fd5b5061008c610138565b005b34801561009a57600080fd5b506100b560048036038101906100b091906103ec565b61031f565b005b3480156100c357600080fd5b506100cc610362565b6040516100d991906104a7565b60405180910390f35b3480156100ee57600080fd5b506100f7610381565b604051610104919061048c565b60405180910390f35b34801561011957600080fd5b50610122610387565b60405161012f9190610471565b60405180910390f35b600061016560643073ffffffffffffffffffffffffffffffffffffffff16316103ab90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516101ae9061045c565b60006040518083038185875af1925050503d80600081146101eb576040519150601f19603f3d011682016040523d82523d6000602084013e6101f0565b606091505b50509050610a9e73ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561023c573d6000803e3d6000fd5b50426001819055506102b782600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103c190919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b610a9e81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081836103b99190610523565b905092915050565b600081836103cf91906104cd565b905092915050565b6000813590506103e681610600565b92915050565b6000602082840312156103fe57600080fd5b600061040c848285016103d7565b91505092915050565b61041e81610566565b82525050565b61042d81610554565b82525050565b60006104406000836104c2565b9150600082019050919050565b61045681610598565b82525050565b600061046782610433565b9150819050919050565b60006020820190506104866000830184610424565b92915050565b60006020820190506104a16000830184610415565b92915050565b60006020820190506104bc600083018461044d565b92915050565b600081905092915050565b60006104d882610598565b91506104e383610598565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610518576105176105a2565b5b828201905092915050565b600061052e82610598565b915061053983610598565b925082610549576105486105d1565b5b828204905092915050565b600061055f82610578565b9050919050565b600061057182610578565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61060981610554565b811461061457600080fd5b5056fea2646970667358221220be303c390bc11c729776964ba02fe7b6ff7054da444d59acedf2bf3dcc5dda1e64736f6c63430008000033";

type DenialConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DenialConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Denial__factory extends ContractFactory {
  constructor(...args: DenialConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Denial";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Denial> {
    return super.deploy(overrides || {}) as Promise<Denial>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Denial {
    return super.attach(address) as Denial;
  }
  connect(signer: Signer): Denial__factory {
    return super.connect(signer) as Denial__factory;
  }
  static readonly contractName: "Denial";
  public readonly contractName: "Denial";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DenialInterface {
    return new utils.Interface(_abi) as DenialInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Denial {
    return new Contract(address, _abi, signerOrProvider) as Denial;
  }
}
