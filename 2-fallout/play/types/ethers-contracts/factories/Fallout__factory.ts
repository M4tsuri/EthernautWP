/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Fallout, FalloutInterface } from "../Fallout";

const _abi = [
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "Fal1out",
    outputs: [],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "allocate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "allocator",
        type: "address",
      },
    ],
    name: "sendAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectAllocations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "allocator",
        type: "address",
      },
    ],
    name: "allocatorBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107c9806100206000396000f3fe60806040526004361061008d576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b1161006b5780638da5cb5b146100de578063a2dea26f14610109578063abaa991614610132578063ffd40b561461013c5761008d565b80636fab5ddf14610092578063893d20e81461009c5780638aa96f38146100c7575b600080fd5b61009a610179565b005b3480156100a857600080fd5b506100b1610221565b6040516100be9190610610565b60405180910390f35b3480156100d357600080fd5b506100dc61024b565b005b3480156100ea57600080fd5b506100f361033b565b604051610100919061062b565b60405180910390f35b34801561011557600080fd5b50610130600480360381019061012b919061057a565b610361565b005b61013a610434565b005b34801561014857600080fd5b50610163600480360381019061015e9190610551565b6104c9565b6040516101709190610666565b60405180910390f35b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d290610646565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610338573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116103ac57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f19350505050158015610430573d6000803e3d6000fd5b5050565b610485346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461051190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000818361051f9190610692565b905092915050565b60008135905061053681610765565b92915050565b60008135905061054b8161077c565b92915050565b60006020828403121561056357600080fd5b600061057184828501610527565b91505092915050565b60006020828403121561058c57600080fd5b600061059a8482850161053c565b91505092915050565b6105ac816106fa565b82525050565b6105bb816106e8565b82525050565b60006105ce601783610681565b91507f63616c6c6572206973206e6f7420746865206f776e65720000000000000000006000830152602082019050919050565b61060a8161072c565b82525050565b600060208201905061062560008301846105b2565b92915050565b600060208201905061064060008301846105a3565b92915050565b6000602082019050818103600083015261065f816105c1565b9050919050565b600060208201905061067b6000830184610601565b92915050565b600082825260208201905092915050565b600061069d8261072c565b91506106a88361072c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106dd576106dc610736565b5b828201905092915050565b60006106f38261070c565b9050919050565b60006107058261070c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61076e816106e8565b811461077957600080fd5b50565b610785816106fa565b811461079057600080fd5b5056fea26469706673582212208f54905de23637cb4e0c533f87dae19b5983b51e158e762aee9479e6bb47980d64736f6c63430008000033";

type FalloutConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FalloutConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Fallout__factory extends ContractFactory {
  constructor(...args: FalloutConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Fallout";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Fallout> {
    return super.deploy(overrides || {}) as Promise<Fallout>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Fallout {
    return super.attach(address) as Fallout;
  }
  connect(signer: Signer): Fallout__factory {
    return super.connect(signer) as Fallout__factory;
  }
  static readonly contractName: "Fallout";
  public readonly contractName: "Fallout";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FalloutInterface {
    return new utils.Interface(_abi) as FalloutInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Fallout {
    return new Contract(address, _abi, signerOrProvider) as Fallout;
  }
}
