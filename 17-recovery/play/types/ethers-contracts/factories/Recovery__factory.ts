/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Recovery, RecoveryInterface } from "../Recovery";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
    ],
    name: "generateToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eda806100206000396000f3fe608060405234801561001057600080fd5b5060043610610048576000357c0100000000000000000000000000000000000000000000000000000000900480633894e5161461004d575b600080fd5b61006760048036038101906100629190610131565b610069565b005b813382604051610078906100a6565b610084939291906101dc565b604051809103906000f0801580156100a0573d6000803e3d6000fd5b50505050565b610b38806200036d83390190565b60006100c76100c28461024b565b61021a565b9050828152602081018484840111156100df57600080fd5b6100ea8482856102d3565b509392505050565b600082601f83011261010357600080fd5b81356101138482602086016100b4565b91505092915050565b60008135905061012b81610355565b92915050565b6000806040838503121561014457600080fd5b600083013567ffffffffffffffff81111561015e57600080fd5b61016a858286016100f2565b925050602061017b8582860161011c565b9150509250929050565b61018e81610297565b82525050565b600061019f8261027b565b6101a98185610286565b93506101b98185602086016102e2565b6101c281610344565b840191505092915050565b6101d6816102c9565b82525050565b600060608201905081810360008301526101f68186610194565b90506102056020830185610185565b61021260408301846101cd565b949350505050565b6000604051905081810181811067ffffffffffffffff8211171561024157610240610315565b5b8060405250919050565b600067ffffffffffffffff82111561026657610265610315565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006102a2826102a9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156103005780820151818401526020810190506102e5565b8381111561030f576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61035e816102c9565b811461036957600080fd5b5056fe60806040523480156200001157600080fd5b5060405162000b3838038062000b388339818101604052810190620000379190620001ed565b82600090805190602001906200004f9291906200009d565b5080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050620003ff565b828054620000ab9062000337565b90600052602060002090601f016020900481019282620000cf57600085556200011b565b82601f10620000ea57805160ff19168380011785556200011b565b828001600101855582156200011b579182015b828111156200011a578251825591602001919060010190620000fd565b5b5090506200012a91906200012e565b5090565b5b80821115620001495760008160009055506001016200012f565b5090565b6000620001646200015e8462000290565b6200025c565b9050828152602081018484840111156200017d57600080fd5b6200018a84828562000301565b509392505050565b600081519050620001a381620003cb565b92915050565b600082601f830112620001bb57600080fd5b8151620001cd8482602086016200014d565b91505092915050565b600081519050620001e781620003e5565b92915050565b6000806000606084860312156200020357600080fd5b600084015167ffffffffffffffff8111156200021e57600080fd5b6200022c86828701620001a9565b93505060206200023f8682870162000192565b92505060406200025286828701620001d6565b9150509250925092565b6000604051905081810181811067ffffffffffffffff821117156200028657620002856200039c565b5b8060405250919050565b600067ffffffffffffffff821115620002ae57620002ad6200039c565b5b601f19601f8301169050602081019050919050565b6000620002d082620002d7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156200032157808201518184015260208101905062000304565b8381111562000331576000848401525b50505050565b600060028204905060018216806200035057607f821691505b602082108114156200036757620003666200036d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003d681620002c3565b8114620003e257600080fd5b50565b620003f081620002f7565b8114620003fc57600080fd5b50565b610729806200040f6000396000f3fe60806040526004361061005f576000357c010000000000000000000000000000000000000000000000000000000090048062f55d9d146100c257806306fdde03146100eb57806327e235e314610116578063a9059cbb14610153576100bd565b366100bd57610078600a3461017c90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550005b600080fd5b3480156100ce57600080fd5b506100e960048036038101906100e491906103f8565b610192565b005b3480156100f757600080fd5b506101006101ab565b60405161010d91906104a5565b60405180910390f35b34801561012257600080fd5b5061013d600480360381019061013891906103cf565b610239565b60405161014a91906104c7565b60405180910390f35b34801561015f57600080fd5b5061017a60048036038101906101759190610421565b610251565b005b6000818361018a91906104fe565b905092915050565b8073ffffffffffffffffffffffffffffffffffffffff16ff5b600080546101b89061060d565b80601f01602080910402602001604051908101604052809291908181526020018280546101e49061060d565b80156102315780601f1061020657610100808354040283529160200191610231565b820191906000526020600020905b81548152906001019060200180831161021457829003601f168201915b505050505081565b60016020528060005260406000206000915090505481565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561029d57600080fd5b6102ef81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461037a90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600081836103889190610558565b905092915050565b60008135905061039f816106ae565b92915050565b6000813590506103b4816106c5565b92915050565b6000813590506103c9816106dc565b92915050565b6000602082840312156103e157600080fd5b60006103ef84828501610390565b91505092915050565b60006020828403121561040a57600080fd5b6000610418848285016103a5565b91505092915050565b6000806040838503121561043457600080fd5b600061044285828601610390565b9250506020610453858286016103ba565b9150509250929050565b6000610468826104e2565b61047281856104ed565b93506104828185602086016105da565b61048b8161069d565b840191505092915050565b61049f816105d0565b82525050565b600060208201905081810360008301526104bf818461045d565b905092915050565b60006020820190506104dc6000830184610496565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610509826105d0565b9150610514836105d0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561054d5761054c61063f565b5b828202905092915050565b6000610563826105d0565b915061056e836105d0565b9250828210156105815761058061063f565b5b828203905092915050565b6000610597826105b0565b9050919050565b60006105a9826105b0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156105f85780820151818401526020810190506105dd565b83811115610607576000848401525b50505050565b6000600282049050600182168061062557607f821691505b602082108114156106395761063861066e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6106b78161058c565b81146106c257600080fd5b50565b6106ce8161059e565b81146106d957600080fd5b50565b6106e5816105d0565b81146106f057600080fd5b5056fea26469706673582212202b9df547b944ff128d5c977c4540e85b5c7e1e7e4dbfa0963e379356ecc7cd0964736f6c63430008000033a26469706673582212202e46485d20150d3629c86d9cc301cb8083f5b0e54c43ab97b2a2e64e5a85501864736f6c63430008000033";

type RecoveryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RecoveryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Recovery__factory extends ContractFactory {
  constructor(...args: RecoveryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Recovery";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Recovery> {
    return super.deploy(overrides || {}) as Promise<Recovery>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Recovery {
    return super.attach(address) as Recovery;
  }
  connect(signer: Signer): Recovery__factory {
    return super.connect(signer) as Recovery__factory;
  }
  static readonly contractName: "Recovery";
  public readonly contractName: "Recovery";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RecoveryInterface {
    return new utils.Interface(_abi) as RecoveryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Recovery {
    return new Contract(address, _abi, signerOrProvider) as Recovery;
  }
}
