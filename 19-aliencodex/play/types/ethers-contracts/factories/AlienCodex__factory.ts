/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AlienCodex, AlienCodexInterface } from "../AlienCodex";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "contact",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "codex",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    constant: false,
    inputs: [],
    name: "make_contact",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_content",
        type: "bytes32",
      },
    ],
    name: "record",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "retract",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "i",
        type: "uint256",
      },
      {
        name: "_content",
        type: "bytes32",
      },
    ],
    name: "revise",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610810806100536000396000f3fe6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630339f300146100a957806333a8c45a146100ee57806347f57b321461011d57806358699c5514610134578063715018a61461014b5780638da5cb5b146101625780638f32d59b146101b957806394bd7569146101e8578063b5c645bd14610237578063f2fde38b14610272575b600080fd5b3480156100b557600080fd5b506100ec600480360360408110156100cc57600080fd5b8101908080359060200190929190803590602001909291905050506102c3565b005b3480156100fa57600080fd5b506101036102fd565b604051808215151515815260200191505060405180910390f35b34801561012957600080fd5b50610132610310565b005b34801561014057600080fd5b50610149610340565b005b34801561015757600080fd5b5061016061035d565b005b34801561016e57600080fd5b50610177610498565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c557600080fd5b506101ce6104c1565b604051808215151515815260200191505060405180910390f35b3480156101f457600080fd5b506102216004803603602081101561020b57600080fd5b8101908080359060200190929190505050610518565b6040518082815260200191505060405180910390f35b34801561024357600080fd5b506102706004803603602081101561025a57600080fd5b810190808035906020019092919050505061053b565b005b34801561027e57600080fd5b506102c16004803603602081101561029557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610582565b005b600060149054906101000a900460ff1615156102db57fe5b806001838154811015156102eb57fe5b90600052602060002001819055505050565b600060149054906101000a900460ff1681565b600060149054906101000a900460ff16151561032857fe5b600180548091906001900361033d9190610793565b50565b6001600060146101000a81548160ff021916908315150217905550565b6103656104c1565b15156103d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60018181548110151561052757fe5b906000526020600020016000915090505481565b600060149054906101000a900460ff16151561055357fe5b600181908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b61058a6104c1565b15156105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6106078161060a565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156107ba578183600052602060002091820191016107b991906107bf565b5b505050565b6107e191905b808211156107dd5760008160009055506001016107c5565b5090565b9056fea165627a7a7230582083de0f6535190f428770482e3a2c0da1971744912a44ef7a067b878c00df22b00029";

type AlienCodexConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlienCodexConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlienCodex__factory extends ContractFactory {
  constructor(...args: AlienCodexConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AlienCodex";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AlienCodex> {
    return super.deploy(overrides || {}) as Promise<AlienCodex>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AlienCodex {
    return super.attach(address) as AlienCodex;
  }
  connect(signer: Signer): AlienCodex__factory {
    return super.connect(signer) as AlienCodex__factory;
  }
  static readonly contractName: "AlienCodex";
  public readonly contractName: "AlienCodex";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlienCodexInterface {
    return new utils.Interface(_abi) as AlienCodexInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlienCodex {
    return new Contract(address, _abi, signerOrProvider) as AlienCodex;
  }
}
