/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DexTwo, DexTwoInterface } from "../DexTwo";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "add_liquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "get_swap_amount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610edb380380610edb833981810160405281019061003291906100cf565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610154565b6000815190506100c98161013d565b92915050565b600080604083850312156100e257600080fd5b60006100f0858286016100ba565b9250506020610101858286016100ba565b9150509250929050565b60006101168261011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101468161010b565b811461015157600080fd5b50565b610d78806101636000396000f3fe608060405234801561001057600080fd5b506004361061009a576000357c0100000000000000000000000000000000000000000000000000000000900480633418de5c116100785780633418de5c146100f5578063d21220a714610125578063df791e5014610143578063f7888aec1461015f5761009a565b8063095ea7b31461009f57806325be124e146100bb578063264e8893146100d9575b600080fd5b6100b960048036038101906100b49190610a19565b61018f565b005b6100c3610329565b6040516100d09190610b05565b60405180910390f35b6100f360048036038101906100ee9190610a19565b61034f565b005b61010f600480360381019061010a91906109ca565b6103ff565b60405161011c9190610ba0565b60405180910390f35b61012d610569565b60405161013a9190610b05565b60405180910390f35b61015d600480360381019061015891906109ca565b61058d565b005b6101796004803603810190610174919061098e565b61088b565b6040516101869190610ba0565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610206929190610b57565b602060405180830381600087803b15801561022057600080fd5b505af1158015610234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102589190610a55565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016102d2929190610b57565b602060405180830381600087803b1580156102ec57600080fd5b505af1158015610300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103249190610a55565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103a893929190610b20565b602060405180830381600087803b1580156103c257600080fd5b505af11580156103d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fa9190610a55565b505050565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104569190610b05565b60206040518083038186803b15801561046e57600080fd5b505afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190610a7e565b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104fb9190610b05565b60206040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190610a7e565b836105569190610bfd565b6105609190610bcc565b90509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b808373ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105e39190610b05565b60206040518083038186803b1580156105fb57600080fd5b505afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106339190610a7e565b1015610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90610b80565b60405180910390fd5b60006106818484846103ff565b90508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106dc93929190610b20565b602060405180830381600087803b1580156106f657600080fd5b505af115801561070a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072e9190610a55565b508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610786929190610b57565b602060405180830381600087803b1580156107a057600080fd5b505af11580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d89190610a55565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161083293929190610b20565b602060405180830381600087803b15801561084c57600080fd5b505af1158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190610a55565b5050505050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016108e29190610b05565b60206040518083038186803b1580156108fa57600080fd5b505afa15801561090e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109329190610a7e565b905092915050565b60008135905061094981610cfd565b92915050565b60008151905061095e81610d14565b92915050565b60008135905061097381610d2b565b92915050565b60008151905061098881610d2b565b92915050565b600080604083850312156109a157600080fd5b60006109af8582860161093a565b92505060206109c08582860161093a565b9150509250929050565b6000806000606084860312156109df57600080fd5b60006109ed8682870161093a565b93505060206109fe8682870161093a565b9250506040610a0f86828701610964565b9150509250925092565b60008060408385031215610a2c57600080fd5b6000610a3a8582860161093a565b9250506020610a4b85828601610964565b9150509250929050565b600060208284031215610a6757600080fd5b6000610a758482850161094f565b91505092915050565b600060208284031215610a9057600080fd5b6000610a9e84828501610979565b91505092915050565b610ab081610c57565b82525050565b6000610ac3601283610bbb565b91507f4e6f7420656e6f75676820746f207377617000000000000000000000000000006000830152602082019050919050565b610aff81610c95565b82525050565b6000602082019050610b1a6000830184610aa7565b92915050565b6000606082019050610b356000830186610aa7565b610b426020830185610aa7565b610b4f6040830184610af6565b949350505050565b6000604082019050610b6c6000830185610aa7565b610b796020830184610af6565b9392505050565b60006020820190508181036000830152610b9981610ab6565b9050919050565b6000602082019050610bb56000830184610af6565b92915050565b600082825260208201905092915050565b6000610bd782610c95565b9150610be283610c95565b925082610bf257610bf1610cce565b5b828204905092915050565b6000610c0882610c95565b9150610c1383610c95565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c4c57610c4b610c9f565b5b828202905092915050565b6000610c6282610c75565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610d0681610c57565b8114610d1157600080fd5b50565b610d1d81610c69565b8114610d2857600080fd5b50565b610d3481610c95565b8114610d3f57600080fd5b5056fea2646970667358221220e649fab49824bfcb4d5f592f1247f04d5efc10361464141881f9a13a3ad56a9664736f6c63430008000033";

type DexTwoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexTwoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DexTwo__factory extends ContractFactory {
  constructor(...args: DexTwoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DexTwo";
  }

  deploy(
    _token1: string,
    _token2: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DexTwo> {
    return super.deploy(_token1, _token2, overrides || {}) as Promise<DexTwo>;
  }
  getDeployTransaction(
    _token1: string,
    _token2: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token1, _token2, overrides || {});
  }
  attach(address: string): DexTwo {
    return super.attach(address) as DexTwo;
  }
  connect(signer: Signer): DexTwo__factory {
    return super.connect(signer) as DexTwo__factory;
  }
  static readonly contractName: "DexTwo";
  public readonly contractName: "DexTwo";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexTwoInterface {
    return new utils.Interface(_abi) as DexTwoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DexTwo {
    return new Contract(address, _abi, signerOrProvider) as DexTwo;
  }
}
