/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Elevator, ElevatorInterface } from "../Elevator";

const _abi = [
  {
    inputs: [],
    name: "floor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "top",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_floor",
        type: "uint256",
      },
    ],
    name: "goTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610399806100206000396000f3fe608060405234801561001057600080fd5b506004361061005e576000357c0100000000000000000000000000000000000000000000000000000000900480634069536314610063578063ed9a713414610081578063fe6dcdba1461009d575b600080fd5b61006b6100bb565b6040516100789190610304565b60405180910390f35b61009b600480360381019061009691906102a2565b6100c1565b005b6100a561023e565b6040516100b291906102e9565b60405180910390f35b60015481565b60003390508073ffffffffffffffffffffffffffffffffffffffff16635f9a4bca836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161011b9190610304565b602060405180830381600087803b15801561013557600080fd5b505af1158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d9190610279565b61023a57816001819055508073ffffffffffffffffffffffffffffffffffffffff16635f9a4bca6001546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016101cf9190610304565b602060405180830381600087803b1580156101e957600080fd5b505af11580156101fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102219190610279565b6000806101000a81548160ff0219169083151502179055505b5050565b60008054906101000a900460ff1681565b60008151905061025e81610335565b92915050565b6000813590506102738161034c565b92915050565b60006020828403121561028b57600080fd5b60006102998482850161024f565b91505092915050565b6000602082840312156102b457600080fd5b60006102c284828501610264565b91505092915050565b6102d48161031f565b82525050565b6102e38161032b565b82525050565b60006020820190506102fe60008301846102cb565b92915050565b600060208201905061031960008301846102da565b92915050565b60008115159050919050565b6000819050919050565b61033e8161031f565b811461034957600080fd5b50565b6103558161032b565b811461036057600080fd5b5056fea26469706673582212206458e4340fb848d9a0c831469f6283d647938e50c57eeaf164619345626b511e64736f6c63430008000033";

type ElevatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElevatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Elevator__factory extends ContractFactory {
  constructor(...args: ElevatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Elevator";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Elevator> {
    return super.deploy(overrides || {}) as Promise<Elevator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Elevator {
    return super.attach(address) as Elevator;
  }
  connect(signer: Signer): Elevator__factory {
    return super.connect(signer) as Elevator__factory;
  }
  static readonly contractName: "Elevator";
  public readonly contractName: "Elevator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElevatorInterface {
    return new utils.Interface(_abi) as ElevatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Elevator {
    return new Contract(address, _abi, signerOrProvider) as Elevator;
  }
}
