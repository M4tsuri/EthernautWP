/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Attack, AttackInterface } from "../Attack";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isLastFloor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Elevator",
        name: "e",
        type: "address",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008060006101000a81548160ff0219169083151502179055506103118061003a6000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c0100000000000000000000000000000000000000000000000000000000900480635f9a4bca14610058578063d018db3e14610088575b600080fd5b610072600480360381019061006d91906101c4565b6100a4565b60405161007f919061020b565b60405180910390f35b6100a2600480360381019061009d919061019b565b6100e6565b005b60008060009054906101000a900460ff166100dc5760016000806101000a81548160ff021916908315150217905550600090506100e1565b600190505b919050565b8073ffffffffffffffffffffffffffffffffffffffff1663ed9a713460016040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161013c9190610226565b600060405180830381600087803b15801561015657600080fd5b505af115801561016a573d6000803e3d6000fd5b5050505050565b600081359050610180816102ad565b92915050565b600081359050610195816102c4565b92915050565b6000602082840312156101ad57600080fd5b60006101bb84828501610171565b91505092915050565b6000602082840312156101d657600080fd5b60006101e484828501610186565b91505092915050565b6101f681610253565b82525050565b6102058161029b565b82525050565b600060208201905061022060008301846101ed565b92915050565b600060208201905061023b60008301846101fc565b92915050565b600061024c82610271565b9050919050565b60008115159050919050565b600061026a82610241565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102a682610291565b9050919050565b6102b68161025f565b81146102c157600080fd5b50565b6102cd81610291565b81146102d857600080fd5b5056fea264697066735822122096dcfcbe2c030243ee303fd60a3d8b7fb300bfb2cc4f2694d5e71ad01aed583f64736f6c63430008000033";

type AttackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Attack__factory extends ContractFactory {
  constructor(...args: AttackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Attack";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Attack> {
    return super.deploy(overrides || {}) as Promise<Attack>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Attack {
    return super.attach(address) as Attack;
  }
  connect(signer: Signer): Attack__factory {
    return super.connect(signer) as Attack__factory;
  }
  static readonly contractName: "Attack";
  public readonly contractName: "Attack";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackInterface {
    return new utils.Interface(_abi) as AttackInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Attack {
    return new Contract(address, _abi, signerOrProvider) as Attack;
  }
}
